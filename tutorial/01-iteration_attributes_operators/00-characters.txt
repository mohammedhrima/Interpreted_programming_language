// iteration
str = "this is a string"
output("str[0] is ", str[0], "\n\n")


// concatination
str1 = "hello "
str2 = "world"
output("test concatination:\n")
output("str1 + str2 is ", str1 + str2)
output("\n\n")


// find indexof of substring
str = "abcdefghijklmno"
output("test indexof:\n")
output("index of de in str ", str.indexof("de"), "\n")
output("index of fe in str ", str.indexof("fe"), "\n\n")


// count how much substring in string
str = "abcdefgahijaklmno"
output("test count:\n")
output("there is ",str.count("a")," a in str", "\n")
output("there is ",str.count("z")," z in str", "\n\n")


// split
str = "abcdefgahijaklmno"
output("test split:\n")
array = str.split("a")
output("split str by a\m")
output("array is: ", array, "\n\n")


// trim
str = "abcdefgahijaklmnoabc"
output("test trim:\n")
output("trim str by 'abc' ", str ,"\n")
output("str after triming ", str.trim("abc") ,"\n\n")


// startswith
str = "abcdefgahijaklmnoabc"
output("test startswith:\n")
output(str.startswith("abc") ,"\n")
output(str.startswith("abce") ,"\n\n")


// endswith
str = "abcdefgahijaklmno"
output("test endswith:\n")
output(str.endswith("mno") ,"\n")
output(str.endswith("mnop") ,"\n\n")


// toupper
str = "abcdefg"
output("test toupper:\n")
output("to upper: ", str.toup, "\n\n")

// tolower
str = "RSTUVWX"
output("test tolower:\n")
output("to low: ", str.tolow, "\n\n")

// tonumber (is like atoi)
str = "123"
output("test tonum:\n")
output(str.tonum, "\n\n")

// isupper
str = "ABC"
output("test isup:\n")
output(str.isup, "\n\n")

// islower
str = "abc"
output("test islow:\n")
output(str.islow, "\n\n")

// ischar
str = "abc"
output("test ischar:\n")
output(str.ischar, "\n\n")

// isnum
str = "123"
output("test isnum:\n")
output(str.isnum, "\n\n")

// len
str = "abcdefgi"
output("test len:\n")
output(str.len, "\n\n")

// type
str = "abcd"
output("test type:\n")
output(str.type, "\n\n")
